global !p
def fb(string, c=0):
    '''Count brackets'''
    left_bracket = string.find("(")
    if left_bracket > -1:
        string = string[left_bracket + 1:]
        right_bracket = string.find(")")
        if right_bracket > -1:
            if string[:right_bracket].find("(") == -1:
                c += 1
            string = string[right_bracket + 1:]
        return fb(string, c)
    else:
        return c

def check_regexp_for_params(snip, t):
    if len(t[1]):
        arg_count = fb(t[1])
        if arg_count:
            args = ", ".join( ["arg%d" % (x+1) for x in range(arg_count)] )
            snip.rv = ', ' + args

endglobal

snippet i "Python import statement" b
import ${1}
endsnippet

snippet fi "Python from ... import statement" b
from ${1} import ${2}
endsnippet

snippet fv "Import from views" b
from ${1:app}.views import ${2:name}
endsnippet

snippet fm "Import from models" b
from ${1:app}.models import ${2:name}
endsnippet

snippet todo "Todo"
# TODO: ${1:desc} `!v strftime("%c")` (`echo $USER`)
endsnippet

snippet # "coding: utf-8 comment" b
# -*- coding: utf-8 -*-
endsnippet

snippet g "Dictionary/list getattr" w
${1:dict}[${2:key}]
endsnippet

snippet { "Two-line dict" w
{
    ${1}

endsnippet

snippet [ "Two-line list" w
[
    ${1}

endsnippet

snippet lc "List compr. -> [ x for x in y ]" w
[${3:$2} for ${2:elem} in ${1:list}${4: if $2}]
endsnippet

snippet "ste?p?" "Lettuce step decorated function" rb
@step(r"${1}")
def ${2:step_name}(step${3:`!p check_regexp_for_params(snip, t)`}):
    ${4:pass}
endsnippet

snippet df "function without docstrings" b
def ${1:function}(`!p
if snip.indent:
   snip.rv = 'self' + (", " if len(t[2]) else "")`${2:arg1}):
	${0:pass}
endsnippet

snippet cl "Class without docstrings" b
class ${1:MyClass}(${2:object}):
    ${3:pass}
endsnippet

snippet f "Function call" w
${1:function}(${VISUAL}${2})
endsnippet

snippet ipdb "Set IPDB breakpoint" b
import ipdb; ipdb.set_trace()
endsnippet

snippet qs "Django queryset"
${1:set} = ${2:Model}.${3:objects}.${4:filter}(${5:${6:pk}=${7:pk}})
endsnippet

